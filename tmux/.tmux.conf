### General Options ###
set-option -g default-terminal "xterm-256color"
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",xterm-256color*:Tc"
set-option -g escape-time 0  # Reduce escape-time for better responsiveness
set-option -g focus-events on  # Update tmux state when terminal focus changes
set-option -g base-index 1  # Start window numbering at 1
set-option -g renumber-windows on  # Automatically renumber windows after closing one
set-option -g set-clipboard on  # Use system clipboard integration
setw -g mouse on  # Enable mouse support
unbind -n MouseDrag1Pane
unbind -Tcopy-mode MouseDrag1Pane
setw -g mode-keys vi  # Use Vim-style key bindings in copy mode
set -g status-justify left
set -g update-environment "DISPLAY SSH_AUTH_SOCK SSH_CONNECTION GPG_TTY"

### Key Bindings ###
# Set the prefix key to Ctrl-s
set-option -g prefix C-s
unbind C-b  # Unbind the default prefix (Ctrl-b)
unbind r
bind r source-file ~/.tmux.conf  # Reload configuration with prefix + r

# Pane splitting
bind-key v split-window -h  # Horizontal split
bind-key b split-window -v  # Vertical split
bind-key e split-window -v -p 20 # Horizontal split for 20%

# Window navigation
bind-key -n S-Left previous-window  # Navigate to the previous window with Shift + Left
bind-key -n S-Right next-window  # Navigate to the next window with Shift + Right
bind-key -n M-H previous-window  # Navigate to the previous window with Alt + Shift + H
bind-key -n M-L next-window  # Navigate to the next window with Alt + Shift + L

bind -n M-j select-window -t :1
bind -n M-k select-window -t :2
bind -n M-l select-window -t :3
bind -n M-: select-window -t :4

# Vim-like pane navigation
bind -r k select-pane -U  # Move up
bind -r j select-pane -D  # Move down
bind -r h select-pane -L  # Move left
bind -r l select-pane -R  # Move right

# Smart pane switching (compatible with Vim splits)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

# Run programs in a new window
bind-key k run-shell "tmux neww k9s"  # Open k9s in a new window
bind-key g run-shell "tmux neww lazygit"  # Open lazygit in a new window

# Custom scripts
bind -n C-f split-window -v -l 15 '~/.local/bin/tmux-sessionizer'
# bind-key -n C-f display-popup -w 50% -h 50% -E ~/.local/bin/tmux-sessionizer # Popup version
bind-key -n C-g run-shell "~/.local/bin/tmux-gitlab-dashboard"

# Copy mode navigation
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

set -g status-right "#(/bin/zsh $HOME/.tmux/kube-tmux/kube.tmux 250 red cyan)"

# Style
gray_light="#D8DEE9"
gray_medium="#ABB2BF"
gray_dark="#3B4252"
green_soft="#A3BE8C"
blue_muted="#81A1C1"
cyan_soft="#88C0D0"

set -g status-position top
set -g status-left-length 100
set -g status-style "fg=${gray_light},bg=default"
set -g status-left "#[fg=${green_soft},bold]#S #[fg=${gray_light},nobold] | "
set -g window-status-current-format "#[fg=${cyan_soft},bold] >#[underscore]#I:#W"
set -g window-status-format " #I:#W" # Remove last page indicator "-"
set -g message-style "fg=${gray_light},bg=default"
set -g mode-style "fg=${gray_dark},bg=${blue_muted}"
set -g pane-border-style "fg=${gray_dark}"
set -g pane-active-border-style "fg=${gray_medium}"
